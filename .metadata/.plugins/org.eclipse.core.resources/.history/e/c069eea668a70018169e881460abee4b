package com.ic.myupload;

import java.io.File;
import java.io.IOException;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;

import myconst.MyConstant;
import vo.PhotoVo;
import vo.PhotoVo2;

@Controller
public class PhotoController {

	// DispatcherServlet에서 자동연결
	@Autowired
	ServletContext application;
	
	@Autowired
	HttpServletRequest request;
	
	@Autowired
	HttpSession  session;
	
	
	
	
	@RequestMapping("/insert_form.do")
	public String insert_form() {
		
		return MyConstant.PhotoController.VIEW_PATH +  "insert_form.jsp";
	}
	
	
	@RequestMapping("/insert_form2.do")
	public String insert_form2() {
		
		return MyConstant.PhotoController.VIEW_PATH +  "insert_form2.jsp";
	}
	
	
	
	//  insert.do?title=그림&photo=업로드화일정보
	//  parameter : title , photo(file)
	// @RequestMapping(value="/insert.do",produces="text/html;charset=utf-8")
	// @ResponseBody
	@RequestMapping("/insert.do")
	public String insert(PhotoVo vo,Model model) throws Exception{
		
		//업로드된 화일정보 체크
		String web_path="/resources/upload/";
		String abs_path=application.getRealPath(web_path);
		
		//System.out.println(abs_path);
		
		
		String filename="no_file";
		MultipartFile  photo = vo.getPhoto();
		if(photo.isEmpty()==false) {//업로드 화일이 있는경우
			//업로드된 화일명을 얻어오기
			filename = photo.getOriginalFilename();
			
			//저장위치및 화일명 설정
			File f = new File(abs_path,filename);
			//설정경로에 이미 존재하냐?
			if(f.exists()) {
				long tm = System.currentTimeMillis();//현재 시스템 시간
				filename = String.format("%d_%s", tm,filename);
				f = new File(abs_path,filename);
			}
			
			//임시화일=>지정된 위치로 복사
			photo.transferTo(f);
			
		}
		
		//업로드된 화일명을 vo넣어준다
		vo.setFilename(filename);
		
		// model통해서 DisptcherServlet에게 데이터를 넘긴다
		model.addAttribute("vo",vo);//결과적으로 request binding
		
		return MyConstant.PhotoController.VIEW_PATH + "insert_result.jsp";
	}
	
	
	
    // insert2.do?title=그림&photo=pic1.png&photo=pic2.png
	@RequestMapping("/insert2.do")
	public String insert2(PhotoVo2 vo,  Model model) throws Exception {
		
		String web_path="/resources/upload/";
		String abs_path=application.getRealPath(web_path);
		
		
		MultipartFile [] photo_array = vo.getPhoto();
		for(int i=0;i< photo_array.length;i++) {
			
			MultipartFile photo = photo_array[i];
			String filename="no_file";
			if(photo.isEmpty()==false) {//업로드 화일이 있는경우
				//업로드된 화일명을 얻어오기
				filename = photo.getOriginalFilename();
				
				//저장위치및 화일명 설정
				File f = new File(abs_path,filename);
				//설정경로에 이미 존재하냐?
				if(f.exists()) {
					long tm = System.currentTimeMillis();//현재 시스템 시간
					filename = String.format("%d_%s", tm,filename);
					f = new File(abs_path,filename);
				}
				//임시화일=>지정된 위치로 복사
				photo.transferTo(f);
			}
			
			if(i==0)
				vo.setFilename1(filename);
			else if(i==1)
				vo.setFilename2(filename);
			
		}
		
		model.addAttribute("vo", vo);
		
		return MyConstant.PhotoController.VIEW_PATH + "insert_result2.jsp";
	}
	
	
	
	
	
}
