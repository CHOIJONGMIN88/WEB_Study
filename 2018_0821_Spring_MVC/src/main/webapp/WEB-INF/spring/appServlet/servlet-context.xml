<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- ccs나 javascritp 파일은폴더 내부에 존재해야 한다. -->
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 초기화시에 views 내부에 있는 파일명에 대해 자동으로 주소를 완성해준다. -->
	<!-- <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean> -->
	
	
	<!-- DispatcherServlet가 servlet-context.xml을 가지고 객체가 초기화 한후에 
		사용자 요청이 수신되면 ex) test.do
		1.핸들 맵핑이 해당 request mapping확인
		2.mapping과 일치하는 메소드 호출
		3.해당메소드의 결과값을 이요해서 forward 등의 행동을 관리한다.
		
	-->
	
	
	<!-- 자동생성:auto-detecting 
		base-package내에 있는 컴포넌트를 탐색해서 자동생성 해줌
		
	컴포넌트의 상속관계
	@Component
	  ㄴ @Controller
	  ㄴ @Service
	  ㄴ @Repository
	  스프링은 해당 3개만 컴포넌트로 인식해서 처음실행시 자동으로 생성된다.
		※기본경로 : com.in.mvc 이고 여러가지로 설정가능	-->
	
	<context:component-scan base-package="dao,com.in.mvc"/>
	
	
	
	
</beans:beans>
